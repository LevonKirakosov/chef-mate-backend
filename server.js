/*
 * –§–∞–π–ª: server.js
 * –í–µ—Ä—Å–∏—è: v11 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS
 * –û–ø–∏—Å–∞–Ω–∏–µ: –î–æ–±–∞–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ cors –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
 */

// --- 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ ---
const express = require("express");
const bodyParser = require("body-parser");
const TelegramBot = require("node-telegram-bot-api");
const cron = require("node-cron");
const fs = require("fs");
const multer = require("multer");
const xlsx = require("xlsx");
const cors = require('cors'); // –ü–æ–¥–∫–ª—é—á–∞–µ–º CORS

// --- 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
const app = express();
app.use(bodyParser.json());
app.use(cors()); // –í–∫–ª—é—á–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

const token = process.env.TELEGRAM_TOKEN;
if (!token) {
  console.error("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!");
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: false });
const webhookPath = `/telegram/webhook/${token}`;
const upload = multer({ dest: "uploads/" });

// --- 3. –ë–∞–∑–∞ –î–∞–Ω–Ω—ã—Ö –∏ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
let salesData = {}; 
const KITCHEN_CHAT_ID = '-1002389108118';

// --- 4. API –¥–ª—è —Å–∞–π—Ç–∞ KMS ---
app.post('/api/sales/upload', upload.single('salesReport'), (req, res) => {
    try {
        if (!req.file) {
            return res.status(400).json({ success: false, message: "–§–∞–π–ª –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω." });
        }
        console.log(">>> [API] –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞...");

        const workbook = xlsx.readFile(req.file.path);
        const sheetName = workbook.SheetNames[0];
        const worksheet = workbook.Sheets[sheetName];
        const data = xlsx.utils.sheet_to_json(worksheet, { header: 1 });

        const header = data[0];
        const dishIndex = header.findIndex(h => String(h).toLowerCase().includes('–±–ª—é–¥–æ'));
        const qtyIndex = header.findIndex(h => String(h).toLowerCase().includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'));

        if (dishIndex === -1 || qtyIndex === -1) {
            fs.unlinkSync(req.file.path);
            console.log(">>> [API ERROR] –í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∫–æ–ª–æ–Ω–∫–∏ '–ë–ª—é–¥–æ' –∏ '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'.");
            return res.status(400).json({ success: false, message: "–í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∫–æ–ª–æ–Ω–∫–∏ '–ë–ª—é–¥–æ' –∏ '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'." });
        }

        salesData = {}; 
        for (let i = 1; i < data.length; i++) {
            const row = data[i];
            const dishName = row[dishIndex];
            const quantity = parseInt(row[qtyIndex], 10);
            if (dishName && !isNaN(quantity)) {
                salesData[dishName] = (salesData[dishName] || 0) + quantity;
            }
        }

        fs.unlinkSync(req.file.path); 
        
        const processedRows = Object.keys(salesData).length;
        console.log(">>> [API SUCCESS] –û–±—Ä–∞–±–æ—Ç–∞–Ω –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö:", salesData);
        bot.sendMessage(KITCHEN_CHAT_ID, `üìä *–û—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∑–∞–≥—Ä—É–∂–µ–Ω!*\n\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ *${processedRows}* —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π. –¢–µ–ø–µ—Ä—å —è –≥–æ—Ç–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–µ /stats.`, { parse_mode: 'Markdown' });

        res.json({ success: true, message: "–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.", processedRows });

    } catch (error) {
        console.error(">>> [API ERROR] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:", error);
        res.status(500).json({ success: false, message: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞." });
    }
});


// --- 5. –õ–æ–≥–∏–∫–∞ Telegram-–±–æ—Ç–∞ ---
app.post(webhookPath, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

bot.onText(/\/stats/, (msg) => {
    const chatId = msg.chat.id;
    if (Object.keys(salesData).length === 0) {
        bot.sendMessage(chatId, "üìà –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å KMS.");
        return;
    }

    let response = "*üìä –°–≤–æ–¥–∫–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∑–∞ —Å–µ–≥–æ–¥–Ω—è:*\n\n";
    let totalSold = 0;
    
    const sortedSales = Object.entries(salesData).sort(([,a],[,b]) => b-a);

    sortedSales.forEach(([dishName, quantity], index) => {
        const emoji = index === 0 ? 'üèÜ' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : '‚ñ™Ô∏è';
        response += `${emoji} *${dishName}:* ${quantity} —à—Ç.\n`;
        totalSold += quantity;
    });

    response += `\n*–ò—Ç–æ–≥–æ –ø—Ä–æ–¥–∞–Ω–æ:* ${totalSold} –±–ª—é–¥.`;
    bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
});

// ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞: /start, /menu, /recipe, callback_query, cron jobs) ...
// –≠—Ç–æ—Ç –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º –∂–µ, –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏, –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –æ–ø—É—â–µ–Ω.
// –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤ –≤–∞—à–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ!
const menuData = {
    monday: { name: "–ò—Ç–∞–ª–∏—è üáÆüáπ", dishes: [
        { id: 'ita-sal', type: '–°–∞–ª–∞—Ç', name: '–ü–∞–Ω—Ü–∞–Ω–µ–ª–ª–∞', desc: '(—Ç–æ–º–∞—Ç—ã, –æ–≥—É—Ä—Ü—ã, —Ö–ª–µ–±, –±–∞–∑–∏–ª–∏–∫)', cooking_process: '1. –ù–∞—Ä–µ–∑–∞—Ç—å –∫—Ä—É–ø–Ω–æ –ø–æ–º–∏–¥–æ—Ä—ã, –æ–≥—É—Ä—Ü—ã, –ª—É–∫. 2. –ü–æ–¥—Å—É—à–∏—Ç—å —Ö–ª–µ–±. 3. –°–º–µ—à–∞—Ç—å –æ–≤–æ—â–∏, —Ö–ª–µ–±, –±–∞–∑–∏–ª–∏–∫ –∏ –∑–∞–ø—Ä–∞–≤–∏—Ç—å –æ–ª–∏–≤–∫–æ–≤—ã–º –º–∞—Å–ª–æ–º –∏ –≤–∏–Ω–Ω—ã–º —É–∫—Å—É—Å–æ–º. –î–∞—Ç—å –Ω–∞—Å—Ç–æ—è—Ç—å—Å—è 5-10 –º–∏–Ω—É—Ç.' },
        { id: 'ita-soup', type: '–°—É–ø', name: '–ú–∏–Ω–µ—Å—Ç—Ä–æ–Ω–µ', desc: '(—Å–µ–∑–æ–Ω–Ω—ã–µ –æ–≤–æ—â–∏, –ø–∞—Å—Ç–∞)', cooking_process: '1. –ù–∞—Ä–µ–∑–∞—Ç—å –º–µ–ª–∫–æ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, –º–æ—Ä–∫–æ–≤—å, –ª—É–∫, —Å–µ–ª—å–¥–µ—Ä–µ–π, –∫–∞–±–∞—á–æ–∫. 2. –ü–∞—Å—Å–µ—Ä–æ–≤–∞—Ç—å –æ–≤–æ—â–∏, –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–º–∞—Ç—ã –∏ –±—É–ª—å–æ–Ω. –í–∞—Ä–∏—Ç—å 15-20 –º–∏–Ω—É—Ç. 3. –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Å—Ç—É –∏ –∑–µ–ª–µ–Ω—ã–π –≥–æ—Ä–æ—à–µ–∫, –≤–∞—Ä–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.' },
        { id: 'ita-hot', type: '–ì–æ—Ä—è—á–µ–µ', name: '–õ–∞–∑–∞–Ω—å—è –ë–æ–ª–æ–Ω—å–µ–∑–µ', desc: '(—Å–æ—É—Å –ë–æ–ª–æ–Ω—å–µ–∑–µ, —Å–æ—É—Å –ë–µ—à–∞–º–µ–ª—å, —Å—ã—Ä)', cooking_process: '1. –ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Å–æ—É—Å—ã "–ë–æ–ª–æ–Ω—å–µ–∑–µ" –∏ "–ë–µ—à–∞–º–µ–ª—å". 2. –í —Ñ–æ—Ä–º–µ –≤—ã–ª–æ–∂–∏—Ç—å —Å–ª–æ—è–º–∏: —Å–æ—É—Å –ë–æ–ª–æ–Ω—å–µ–∑–µ, –ª–∏—Å—Ç –ª–∞–∑–∞–Ω—å–∏, —Å–æ—É—Å –ë–µ—à–∞–º–µ–ª—å, —Å—ã—Ä. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å. 3. –ó–∞–ø–µ–∫–∞—Ç—å –ø—Ä–∏ 180¬∞C 20-25 –º–∏–Ω—É—Ç.' }
    ]},
    tuesday: { name: "–ì—Ä—É–∑–∏—è üá¨üá™", dishes: [
        { id: 'geo-sal', type: '–°–∞–ª–∞—Ç', name: '–ì—Ä—É–∑–∏–Ω—Å–∫–∏–π —Å –æ—Ä–µ—Ö–æ–≤–æ–π –∑–∞–ø—Ä–∞–≤–∫–æ–π', desc: '(—Ç–æ–º–∞—Ç—ã, –æ–≥—É—Ä—Ü—ã, –æ—Ä–µ—Ö–∏, –∫–∏–Ω–∑–∞)', cooking_process: '1. –ö—Ä—É–ø–Ω–æ –Ω–∞—Ä–µ–∑–∞—Ç—å –ø–æ–º–∏–¥–æ—Ä—ã –∏ –æ–≥—É—Ä—Ü—ã. 2. –ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∑–∞–ø—Ä–∞–≤–∫—É: –∏–∑–º–µ–ª—å—á–∏—Ç—å –≥—Ä–µ—Ü–∫–∏–µ –æ—Ä–µ—Ö–∏ –∏ —á–µ—Å–Ω–æ–∫ –≤ –ø–∞—Å—Ç—É, —Å–º–µ—à–∞—Ç—å —Å —É–∫—Å—É—Å–æ–º, –≤–æ–¥–æ–π –∏ —Å–ø–µ—Ü–∏—è–º–∏. 3. –°–æ–µ–¥–∏–Ω–∏—Ç—å –æ–≤–æ—â–∏ —Å –∑–∞–ø—Ä–∞–≤–∫–æ–π.' },
        { id: 'geo-soup', type: '–°—É–ø', name: '–•–∞—Ä—á–æ', desc: '(–≥–æ–≤—è–¥–∏–Ω–∞, —Ä–∏—Å, —Ç–∫–µ–º–∞–ª–∏, –æ—Ä–µ—Ö–∏)', cooking_process: '1. –°–≤–∞—Ä–∏—Ç—å –≥–æ–≤—è–∂–∏–π –±—É–ª—å–æ–Ω. 2. –ü–∞—Å—Å–µ—Ä–æ–≤–∞—Ç—å –ª—É–∫ —Å —Ç–æ–º–∞—Ç–Ω–æ–π –ø–∞—Å—Ç–æ–π. 3. –í –±—É–ª—å–æ–Ω –¥–æ–±–∞–≤–∏—Ç—å —Ä–∏—Å, —Ç–∫–µ–º–∞–ª–∏, –æ—Ä–µ—Ö–∏ –∏ –ø–∞—Å—Å–µ—Ä–æ–≤–∫—É. –í–∞—Ä–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–∞. –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤–∏—Ç—å —á–µ—Å–Ω–æ–∫ –∏ –∫–∏–Ω–∑—É.' },
        { id: 'geo-hot', type: '–ì–æ—Ä—è—á–µ–µ', name: '–ß–∞—Ö–æ—Ö–±–∏–ª–∏ –∏–∑ –∫—É—Ä–∏—Ü—ã', desc: '(–∫—É—Ä–∏–Ω–æ–µ –±–µ–¥—Ä–æ, —Ç–æ–º–∞—Ç—ã, —Å–ø–µ—Ü–∏–∏)', cooking_process: '1. –û–±–∂–∞—Ä–∏—Ç—å –∫—É—Å–∫–∏ –∫—É—Ä–∏—Ü—ã –¥–æ –∑–æ–ª–æ—Ç–∏—Å—Ç–æ–π –∫–æ—Ä–æ—á–∫–∏. 2. –ù–∞ –≤—ã—Ç–æ–ø–∏–≤—à–µ–º—Å—è –∂–∏—Ä–µ –æ–±–∂–∞—Ä–∏—Ç—å –ª—É–∫, –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–º–∏–¥–æ—Ä—ã. 3. –°–æ–µ–¥–∏–Ω–∏—Ç—å –∫—É—Ä–∏—Ü—É —Å –æ–≤–æ—â–∞–º–∏, –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∏ –∏ —Ç—É—à–∏—Ç—å –ø–æ–¥ –∫—Ä—ã—à–∫–æ–π 30-40 –º–∏–Ω—É—Ç.' }
    ]},
    wednesday: { name: "–§—Ä–∞–Ω—Ü–∏—è üá´üá∑", dishes: [
        { id: 'fra-sal', type: '–°–∞–ª–∞—Ç', name: '–õ–∏–æ–Ω—Å–∫–∏–π —Å–∞–ª–∞—Ç', desc: '(—Å–∞–ª–∞—Ç–Ω—ã–π –º–∏–∫—Å, –±–µ–∫–æ–Ω, —è–π—Ü–æ-–ø–∞—à–æ—Ç)', cooking_process: '1. –û–±–∂–∞—Ä–∏—Ç—å –±–µ–∫–æ–Ω, –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –≥—Ä–µ–Ω–∫–∏. 2. –ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —è–π—Ü–æ-–ø–∞—à–æ—Ç. 3. –í—ã–ª–æ–∂–∏—Ç—å –Ω–∞ —Å–∞–ª–∞—Ç–Ω—ã–µ –ª–∏—Å—Ç—å—è –≥—Ä–µ–Ω–∫–∏ –∏ –±–µ–∫–æ–Ω, –≤ —Ü–µ–Ω—Ç—Ä –ø–æ–º–µ—Å—Ç–∏—Ç—å —è–π—Ü–æ-–ø–∞—à–æ—Ç. –ü–æ–ª–∏—Ç—å –¥–∏–∂–æ–Ω—Å–∫–æ–π –∑–∞–ø—Ä–∞–≤–∫–æ–π.' },
        { id: 'fra-soup', type: '–°—É–ø', name: '–ì—Ä–∏–±–Ω–æ–π –∫—Ä–µ–º-—Å—É–ø', desc: '(—à–∞–º–ø–∏–Ω—å–æ–Ω—ã, —Å–ª–∏–≤–∫–∏, —Ç—Ä—é—Ñ–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ)', cooking_process: '1. –û–±–∂–∞—Ä–∏—Ç—å –≥—Ä–∏–±—ã —Å –ª—É–∫–æ–º. 2. –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, –±—É–ª—å–æ–Ω –∏ –≤–∞—Ä–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏. –ü—é—Ä–∏—Ä–æ–≤–∞—Ç—å –±–ª–µ–Ω–¥–µ—Ä–æ–º. 3. –í–ª–∏—Ç—å —Å–ª–∏–≤–∫–∏, –ø—Ä–æ–≥—Ä–µ—Ç—å, –Ω–µ –¥–æ–≤–æ–¥—è –¥–æ –∫–∏–ø–µ–Ω–∏—è.' },
        { id: 'fra-hot', type: '–ì–æ—Ä—è—á–µ–µ', name: '–ö—É—Ä–∏–Ω–æ–µ —Ñ—Ä–∏–∫–∞—Å–µ', desc: '(–∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, –≥—Ä–∏–±—ã, —Å–ª–∏–≤–æ—á–Ω—ã–π —Å–æ—É—Å)', cooking_process: '1. –û–±–∂–∞—Ä–∏—Ç—å –∫—É—Å–æ—á–∫–∏ –∫—É—Ä–∏—Ü—ã —Å –ª—É–∫–æ–º –∏ –≥—Ä–∏–±–∞–º–∏. 2. –ü—Ä–∏—Å—ã–ø–∞—Ç—å –º—É–∫–æ–π, –≤–ª–∏—Ç—å –≤–∏–Ω–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é) –∏ —Å–ª–∏–≤–∫–∏. 3. –¢—É—à–∏—Ç—å 10-15 –º–∏–Ω—É—Ç –¥–æ –∑–∞–≥—É—Å—Ç–µ–Ω–∏—è —Å–æ—É—Å–∞.' }
    ]},
    thursday: { name: "–†–æ—Å—Å–∏—è üá∑üá∫", dishes: [
        { id: 'rus-sal', type: '–°–∞–ª–∞—Ç', name: '–í–∏–Ω–µ–≥—Ä–µ—Ç —Å –∫–∏–ª—å–∫–æ–π', desc: '(—Å–≤–µ–∫–ª–∞, –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å, –∫–∏–ª—å–∫–∞, –≥—Ä–µ–Ω–∫–∏)', cooking_process: '1. –û—Ç–≤–∞—Ä–Ω—ã–µ –æ–≤–æ—â–∏ –Ω–∞—Ä–µ–∑–∞—Ç—å –∫—É–±–∏–∫–æ–º, —Å–º–µ—à–∞—Ç—å —Å –∫–≤–∞—à–µ–Ω–æ–π –∫–∞–ø—É—Å—Ç–æ–π –∏ –≥–æ—Ä–æ—à–∫–æ–º. 2. –ó–∞–ø—Ä–∞–≤–∏—Ç—å –∞—Ä–æ–º–∞—Ç–Ω—ã–º –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω—ã–º –º–∞—Å–ª–æ–º. 3. –ü–æ–¥–∞–≤–∞—Ç—å —Å —Ñ–∏–ª–µ –∫–∏–ª—å–∫–∏ –∏ –±–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–º–∏ –≥—Ä–µ–Ω–∫–∞–º–∏.' },
        { id: 'rus-soup', type: '–°—É–ø', name: '–ë–æ—Ä—â ¬´–ú–æ—Å–∫–æ–≤—Å–∫–∏–π¬ª', desc: '(–≥–æ–≤—è–¥–∏–Ω–∞, —Å–≤–µ–∫–ª–∞, –∫–æ–ø—á–µ–Ω–æ—Å—Ç–∏)', cooking_process: '1. –°–≤–∞—Ä–∏—Ç—å –±—É–ª—å–æ–Ω. –¢—É—à–∏—Ç—å —Å–≤–µ–∫–ª—É —Å —Ç–æ–º–∞—Ç–Ω–æ–π –ø–∞—Å—Ç–æ–π. 2. –í –±—É–ª—å–æ–Ω –ø–æ–ª–æ–∂–∏—Ç—å –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å –∏ –∫–∞–ø—É—Å—Ç—É, –∑–∞—Ç–µ–º –ø–∞—Å—Å–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–≤–æ—â–∏ –∏ —Å–≤–µ–∫–ª—É. –í–∞—Ä–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏. 3. –ü–æ–¥–∞–≤–∞—Ç—å —Å –Ω–∞–±–æ—Ä–æ–º –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã—Ö –∫–æ–ø—á–µ–Ω–æ—Å—Ç–µ–π –∏ —Å–º–µ—Ç–∞–Ω–æ–π.' },
        { id: 'rus-hot', type: '–ì–æ—Ä—è—á–µ–µ', name: '–ë–µ—Ñ—Å—Ç—Ä–æ–≥–∞–Ω–æ–≤ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–º –≥—Ä–∞—Ç–µ–Ω–æ–º', desc: '(–≥–æ–≤—è–¥–∏–Ω–∞, —Å–º–µ—Ç–∞–Ω–Ω—ã–π —Å–æ—É—Å, –≥—Ä–∞—Ç–µ–Ω)', cooking_process: '1. –¢–æ–Ω–∫–æ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—É—é –≥–æ–≤—è–¥–∏–Ω—É –±—ã—Å—Ç—Ä–æ –æ–±–∂–∞—Ä–∏—Ç—å —Å –ª—É–∫–æ–º. 2. –î–æ–±–∞–≤–∏—Ç—å —Å–º–µ—Ç–∞–Ω—É, –ø—Ä–∏–ø—Ä–∞–≤–∏—Ç—å –∏ —Ç—É—à–∏—Ç—å 15-20 –º–∏–Ω—É—Ç. 3. –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –Ω–∞—Ä–µ–∑–∞—Ç—å —Å–ª–∞–π—Å–∞–º–∏, –∑–∞–ª–∏—Ç—å —Å–ª–∏–≤–∫–∞–º–∏, –ø–æ—Å—ã–ø–∞—Ç—å —Å—ã—Ä–æ–º –∏ –∑–∞–ø–µ–∫–∞—Ç—å.' }
    ]},
    friday: { name: "–ú–µ–∫—Å–∏–∫–∞ üá≤üáΩ", dishes: [
        { id: 'mex-sal', type: '–°–∞–ª–∞—Ç', name: '–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–π —Å–∞–ª–∞—Ç', desc: '(—Ñ–∞—Å–æ–ª—å, –∫—É–∫—É—Ä—É–∑–∞, –ø–µ—Ä–µ—Ü, –ª–∞–π–º)', cooking_process: '1. –°–º–µ—à–∞—Ç—å –∫–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞—Å–æ–ª—å –∏ –∫—É–∫—É—Ä—É–∑—É. 2. –î–æ–±–∞–≤–∏—Ç—å –º–µ–ª–∫–æ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–µ –±–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü, –æ–≥—É—Ä–µ—Ü –∏ –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫. 3. –ó–∞–ø—Ä–∞–≤–∏—Ç—å —Å–º–µ—Å—å—é –æ–ª–∏–≤–∫–æ–≤–æ–≥–æ –º–∞—Å–ª–∞ –∏ —Å–æ–∫–∞ –ª–∞–π–º–∞.' },
        { id: 'mex-soup', type: '–°—É–ø', name: '–¢–æ–º–∞—Ç–Ω—ã–π –∫—Ä–µ–º-—Å—É–ø —Å —á–∏–ª–∏', desc: '(—Ç–æ–º–∞—Ç—ã, —á–∏–ª–∏, –∫–∏–Ω–∑–∞)', cooking_process: '1. –ü–∞—Å—Å–µ—Ä–æ–≤–∞—Ç—å –ª—É–∫ –∏ —á–µ—Å–Ω–æ–∫, –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–º–∞—Ç—ã –∏ –±—É–ª—å–æ–Ω. –í–∞—Ä–∏—Ç—å 15-20 –º–∏–Ω—É—Ç. 2. –î–æ–±–∞–≤–∏—Ç—å –∫–∏–Ω–∑—É –∏ –ø—é—Ä–∏—Ä–æ–≤–∞—Ç—å –±–ª–µ–Ω–¥–µ—Ä–æ–º. 3. –ü—Ä–æ–≥—Ä–µ—Ç—å, –Ω–µ –¥–æ–≤–æ–¥—è –¥–æ –∫–∏–ø–µ–Ω–∏—è.' },
        { id: 'mex-hot', type: '–ì–æ—Ä—è—á–µ–µ', name: '–ö–µ—Å–∞–¥–∏–ª—å—è —Å –∫—É—Ä–∏—Ü–µ–π', desc: '(—Ç–æ—Ä—Ç–∏–ª—å—è, –∫—É—Ä–∏—Ü–∞, —Å—ã—Ä, –æ–≤–æ—â–∏)', cooking_process: '1. –û–±–∂–∞—Ä–∏—Ç—å –º–µ–ª–∫–æ –Ω–∞—Ä–µ–∑–∞–Ω–Ω–æ–µ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ —Å –ø–µ—Ä—Ü–µ–º –∏ –ª—É–∫–æ–º. 2. –ù–∞ –ø–æ–ª–æ–≤–∏–Ω—É –ª–µ–ø–µ—à–∫–∏ –≤—ã–ª–æ–∂–∏—Ç—å –Ω–∞—á–∏–Ω–∫—É, –ø–æ—Å—ã–ø–∞—Ç—å —Å—ã—Ä–æ–º, —Å–ª–æ–∂–∏—Ç—å –ø–æ–ø–æ–ª–∞–º. 3. –û–±–∂–∞—Ä–∏—Ç—å –Ω–∞ —Å—É—Ö–æ–π —Å–∫–æ–≤–æ—Ä–æ–¥–µ –¥–æ —Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–∏—è —Å—ã—Ä–∞.' }
    ]}
};
const dayNames = { monday: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', tuesday: '–í—Ç–æ—Ä–Ω–∏–∫', wednesday: '–°—Ä–µ–¥–∞', thursday: '–ß–µ—Ç–≤–µ—Ä–≥', friday: '–ü—è—Ç–Ω–∏—Ü–∞' };
let lineCheckState = { confirmed: false, messageId: null };
bot.onText(/^—à–µ—Ñ/i, (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name || '–ü–æ–≤–∞—Ä';
  const welcomeMessage = `*–°–ª—É—à–∞—é –≤–∞—Å, ${userName}!* üë®‚Äçüç≥\n\n–Ø –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å—É-—à–µ—Ñ "Chef-Mate". –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à—É –∫—É—Ö–Ω—é —Å–∞–º–æ–π –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–π!\n\nüöÄ *–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:*`;
  const options = {
      parse_mode: 'Markdown',
      reply_markup: {
          inline_keyboard: [
              [{ text: 'üóìÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é', callback_data: 'show_full_menu' }],
              [{ text: '‚ùì –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å', callback_data: 'show_help' }]
          ]
      }
  };
  bot.sendMessage(chatId, welcomeMessage, options);
});
bot.on('callback_query', (callbackQuery) => {
    const msg = callbackQuery.message;
    const data = callbackQuery.data;
    const chatId = msg.chat.id;
    const user = callbackQuery.from.first_name;

    if (data === 'show_full_menu') {
        sendFullMenu(chatId);
        bot.answerCallbackQuery(callbackQuery.id);
    } else if (data === 'show_help') {
        sendHelpMessage(chatId);
        bot.answerCallbackQuery(callbackQuery.id);
    } else if (data.startsWith('recipe_')) {
        const dishId = data.replace('recipe_', '');
        let foundDish = null;
        for (const day in menuData) {
            const dish = menuData[day].dishes.find(d => d.id === dishId);
            if (dish) { foundDish = dish; break; }
        }
        if (foundDish) {
            const response = `*–ö—Ä–∞—Ç–∫–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è "${foundDish.name}":*\n\n${foundDish.cooking_process}\n\n_–ü–æ–ª–Ω–∞—è –¢–¢–ö, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏ –ø–æ–¥–∞—á–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞–π—Ç–µ KMS._`;
            bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
            bot.answerCallbackQuery(callbackQuery.id, { text: `–†–µ—Ü–µ–ø—Ç "${foundDish.name}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.` });
        }
    } else if (data === 'line_check_confirm') {
        lineCheckState.confirmed = true;
        bot.editMessageText(`*–£—Ç—Ä–µ–Ω–Ω–∏–π –õ–∞–π–Ω-—á–µ–∫ (09:00)*\n\n–°—Ç–∞–Ω—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ. ‚úÖ\n_–ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª(–∞): ${user} –≤ ${new Date().toLocaleTimeString('ru-RU', { timeZone: 'Europe/Moscow' })}_`, {
            chat_id: chatId,
            message_id: msg.message_id,
            parse_mode: 'Markdown'
        });
        bot.answerCallbackQuery(callbackQuery.id, { text: `–°–ø–∞—Å–∏–±–æ, ${user}! –°—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.` });
    }
});
function sendFullMenu(chatId) {
    let initialMessage = "üóìÔ∏è *–ü–æ–ª–Ω–æ–µ –º–µ–Ω—é –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–∞ ¬´–ö—É—Ö–Ω–∏ –ú–∏—Ä–∞¬ª*\n\n";
    bot.sendMessage(chatId, initialMessage, { parse_mode: 'Markdown' });

    Object.keys(menuData).forEach((dayKey, index) => {
        const dayData = menuData[dayKey];
        let response = `*${dayNames[dayKey]} ‚Äî ${dayData.name}*\n`;
        const buttons = [];
        
        dayData.dishes.forEach(dish => {
            const emoji = dish.type === '–°–∞–ª–∞—Ç' ? 'ü•ó' : dish.type === '–°—É–ø' ? 'üç≤' : 'ü•ò';
            response += `  ${emoji} *${dish.name}* ${dish.desc}\n`;
            buttons.push({ text: `üìú –†–µ—Ü–µ–ø—Ç "${dish.name}"`, callback_data: `recipe_${dish.id}` });
        });
        
        const keyboard = [];
        for (let i = 0; i < buttons.length; i++) {
            keyboard.push([buttons[i]]);
        }

        setTimeout(() => {
            bot.sendMessage(chatId, response, {
                parse_mode: 'Markdown',
                reply_markup: {
                    inline_keyboard: keyboard
                }
            });
        }, (index + 1) * 500);
    });
}
function sendHelpMessage(chatId) {
    const helpMessage = `–Ø –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º! üë®‚Äçüç≥\n\n–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–∞–º–∏:\n- **/menu [–¥–µ–Ω—å]**\n- **/recipe [–Ω–∞–∑–≤–∞–Ω–∏–µ]**\n- **/fullmenu**\n\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–®–µ—Ñ", —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.`;
    bot.sendMessage(chatId, helpMessage);
}
cron.schedule('0 6 * * 1-5', () => {
    const message = `*–£—Ç—Ä–µ–Ω–Ω–∏–π –õ–∞–π–Ω-—á–µ–∫ (09:00)* ‚òÄÔ∏è\n\n–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –∫–æ–º–∞–Ω–¥–∞! –ü–æ—Ä–∞ –Ω–∞—á–∏–Ω–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞–Ω—Ü–∏–∏. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å.\n\n–¢–∞–∫–∂–µ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ *—Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –õ–∞–π–Ω-—á–µ–∫* —Å –∑–∞–≥–æ—Ç–æ–≤–æ—á–Ω—ã–º –ª–∏—Å—Ç–æ–º —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∞–π—Ç–∞ KMS.`;
    const options = {
        reply_markup: {
            inline_keyboard: [[{ text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å', callback_data: 'line_check_confirm' }]]
        },
        parse_mode: 'Markdown'
    };
    bot.sendMessage(KITCHEN_CHAT_ID, message, options);
}, {
    timezone: "Etc/UTC"
});
cron.schedule('0 12 * * 1-5', () => {
    const message = `*–ö–æ–Ω—Ç—Ä–æ–ª—å HACCP (15:00)* üå°Ô∏è\n\n–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –í—Ä–µ–º—è –∑–∞–º–µ—Ä–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ ‚Ññ2 (–º—è—Å–Ω–æ–π). –í–Ω–µ—Å–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∂—É—Ä–Ω–∞–ª.`;
    bot.sendMessage(KITCHEN_CHAT_ID, message, { parse_mode: 'Markdown' });
}, {
    timezone: "Etc/UTC"
});


// --- 7. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
const listener = app.listen(process.env.PORT || 3000, () => {
  console.log("Chef-Mate v11 (–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ + CORS) –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É " + listener.address().port);
});
